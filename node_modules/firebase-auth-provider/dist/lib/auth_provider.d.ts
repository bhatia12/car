import 'reflect-metadata';
import * as admin from 'firebase-admin';
import DecodedIdToken = admin.auth.DecodedIdToken;
import UserRecord = admin.auth.UserRecord;
export declare const FirebaseAuthProvider: unique symbol;
export declare const FirebaseAuth: unique symbol;
export interface IAuthProvider {
    getUser(uid: string): Promise<UserRecord>;
    createUser(name: string, email: string, password: string): Promise<UserRecord>;
    updateUser(userId: string, name?: string, email?: string, password?: string): Promise<UserRecord>;
    setEmail(userId: string, email: string): Promise<UserRecord>;
    setPassword(userId: string, password: string): Promise<UserRecord>;
    deleteUser(userId: string): Promise<void>;
    verifyToken(token: string): Promise<DecodedIdToken>;
    listUsers(): Promise<UserRecord[]>;
}
export declare class FakeAuthProvider implements IAuthProvider {
    private users;
    getUser(uid: string): Promise<UserRecord>;
    createUser(name: string, email: string, password: string): Promise<UserRecord>;
    verifyToken(token: string): Promise<any>;
    updateUser(userId: string, name: string, email: string, password: string): Promise<UserRecord>;
    setEmail(userId: string, email: string): Promise<UserRecord>;
    setPassword(userId: string, password: string): Promise<UserRecord>;
    deleteUser(userId: string): Promise<void>;
    listUsers(): Promise<UserRecord[]>;
    clear(): void;
}
